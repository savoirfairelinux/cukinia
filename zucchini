#!/bin/sh
#
# Zucchini a firmware validation framework (ZFTF)

set -e

# Default configuration file
ZUCCHINI_CONF='/etc/zucchini/zucchini.conf'
ZUCCHINI_RUNDIR='/etc/zucchini/tests.d'

# Debug
if [ -n "$ZUCCHINI_DEBUG" ]; then
	ZUCCHINI_CONF='./zucchini.conf'
	ZUCCHINI_RUNDIR='tests.d'
fi

# Use this file to override default config
if [ -r /etc/default/zucchini ]; then
	. /etc/default/zucchini
fi

# zucchini_conf_include: source additional configs
# arg: $* - configs to include
zucchini_conf_include()
{
	local f

	for f in "$@"; do
		# TODO: include the case where arg is a dir
		# in this case, we load every file in it!

		if [ ! -r "$f" ]; then
			echo >&2 "zucchini: warning: can't include \"$f\""
			continue
		fi
		. "$f"
	done
}

# zucchini_log: log arguments on stdout
zucchini_log()
{
	echo "zucchini: $@"
}

# _zucchini_prepare: Prepare test for result
# arg1: description of test
_zucchini_prepare()
{
	__zucchini_cur_test="$@"
}

# run the test and its context
zucchini_runner()
{
	if "$@" > /dev/null ; then
		_zucchini_result PASS
	else
		_zucchini_result FAIL
	fi
}

# _zucchini_result: display test result
# arg1: "PASS" or "FAIL"
# arg2: optional error message
_zucchini_result()
{
	local result="$1"

	[ "$result" = "PASS" -o "$result" = "FAIL" ] || return 1
	zucchini_log "[$result] : $__zucchini_cur_test"
}

# zucchini_user: checks if user $1 exists
zucchini_user()
{
	zucchini_runner _zucchini_user "$1"
}

# zucchini_process: user API
# Optional: check if the process exist for a given username at $2
# arg: $1: the process name
# arg: $2: the user name
zucchini_process()
{
	zucchini_runner _zucchini_process "$1" "$2"
}

# zucchini_python_pkg: user API
# arg1: the python package to test
zucchini_python_pkg()
{
	zucchini_runner _zucchini_python_pkg "$1"
}

zucchini_run_dir()
{
	_zucchini_run_dir "$1"
}

# _zucchini_http_request user API
zucchini_http_request()
{
	zucchini_runner _zucchini_http_request "$1"
}

# _zucchini_python_pkg: try to import the python package
# arg1: the python package
_zucchini_python_pkg()
{
	local package="$1"

	_zucchini_prepare "Checking python package: $package"
	python -c "import sys, pkgutil; sys.exit(0 if pkgutil.find_loader('$package') else 1)"
}

_zucchini_user()
{
	local user="$1"

	_zucchini_prepare "Checking user \"$user\""
	grep -q "^$user:" /etc/passwd
}

# zucchini_process: checks if process $pname runs
# Optional: check if the process exist for a given username $puser
# arg: $1: the process name
# arg: $2: the user name
_zucchini_process()
{
	local pname="$1"
	local puser="$2"

	if [ -n "$puser" ]; then
		_zucchini_prepare "Checking process \"$pname\" with user $puser"
		local result=$(ps -o user,comm | awk ' $1 == "'$puser'" && $2 == "'$pname$'" { print $2 } ')
	else
		_zucchini_prepare "Checking process \"$pname\""
		local result=$(ps -o comm | awk ' $1 == "'$pname$'" { print $1 } ')
	fi
	[ -n "$result" ] && return 0 || return 1
}


# zucchini_http_request: test the request using wget and wait for a return.
_zucchini_http_request()
{
	local request="$1"

	_zucchini_prepare "Checking http request \"$request\""
	wget "$request" -O- > /dev/null 2>&1
}

_checkfile()
{
	local file="$1"

	if [ ! -f  "$file" ]; then
		_zucchini_prepare "External test: $file"
		_zucchini_result FAIL
		return 1
	fi
}

_checkdir()
{
	local dir="$1"

	if [ ! -d "$dir" ]; then
		_zucchini_prepare "External dir: $dir"
		_zucchini_result FAIL
		return 1
	fi
}

# zucchini_rundir: run scripts in given directory
# arg: $*: list of directories
zucchini_run_dirs()
{
	local dir

	for dir in "$@"; do
		_checkdir "$dir" || continue
		_zucchini_run_dir "$dir"
	done
}

# zucchini_run_dir: run all tests file in $1
_zucchini_run_dir()
{
	local dir="$1"
	local f

	for f in "$dir"/*; do
		_checkfile "$f" || continue
		_zucchini_prepare "External: $f"
		zucchini_runner "$f"
	done
}


zucchini_conf_include "$ZUCCHINI_CONF"
zucchini_run_dir "$ZUCCHINI_RUNDIR"
